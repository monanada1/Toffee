import java.util.*;

class User {
    private String email;
    private String password;

    // Constructor
    public User(String email, String password) {
        this.email = email;
        this.password = password;
    }

    // Getters and setters
    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }
     public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }
}

class Customer {
    private String name;
    private String address;
    private int loyaltyPoints;
    private Cart cart;
    private List<Order> orderHistory;

    // Constructor
    public Customer(String name, String address) {
        this.name = name;
        this.address = address;
        this.loyaltyPoints = 0;
        this.cart = new Cart();
        this.orderHistory = new ArrayList<>();
    }

    // Getters and setters
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getAddress() {
        return address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    public int getLoyaltyPoints() {
        return loyaltyPoints;
    }
    public void setLoyaltyPoints(int loyaltyPoints) {
        this.loyaltyPoints = loyaltyPoints;
    }

    public Cart getCart() {
        return cart;
    }

    public void addToCart(Item item) {

        cart.addItem(item);
    }

    public void removeFromCart(Item item) {
        cart.removeItem(item);
    }

    public List<Order> getOrderHistory() {
        return orderHistory;
    }

    public void addOrderToHistory(Order order) {
        orderHistory.add(order);
    }
}

class Admin {
    // Add fields and methods specific to the Admin class
}

class Cart {
    private List<Item> items;

    // Constructor
    public Cart() {
        items = new ArrayList<>();
    }

    public void addItem(Item item) {
        items.add(item);
    }

    public void removeItem(Item item) {
        items.remove(item);
    }

